name: Bump Gem  # Workflow name

on:
  workflow_dispatch:
    inputs:
      bump_type:
        type: choice
        description: "Bump Type (Choosing None will bump build number and keep the same version)"
        default: "patch"
        options:
          - patch
          - minor
          - major

permissions:
  contents: write  # Ensures we can push changes

jobs:
  build:
    name: Build gem
    runs-on: ubuntu-latest

    permissions:
      id-token: write  # Mandatory for trusted publishing
      contents: write  # Required for pushing release tag

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set Git Config
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git config --global user.name "$(gh api /users/${GITHUB_ACTOR} | jq .name -r)"
          git config -l

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.3"

      - name: Install gem-release
        run: gem install gem-release

      - name: Bump the gem
        run: gem bump --version ${{ github.event.inputs.bump_type }} -p

      - name: Pull Latest Changes
        run: |
          git fetch origin main
          git pull origin main --rebase || echo "Rebase failed, attempting merge"
          git merge origin/main || echo "Merge failed; manual intervention required"

      - name: Commit Updated Files
        run: |
          git add Gemfile.lock lib/cm_admin/version.rb
          git commit -m "Bump and update Gemfile.lock" || echo "No changes to commit"

      - name: Push Changes
        run: |
          git push origin main || (echo "Push failed; retrying after rebase" && git pull origin main --rebase && git push origin main)

  release:
    name: Release gem
    runs-on: ubuntu-latest
    needs: build

    permissions:
      id-token: write  # Mandatory for trusted publishing
      contents: write  # Required for `rake release`

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Pull Latest Changes
        run: git pull origin main

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.3"

      - name: Fix Permissions for Gem Installation Path
        run: sudo chmod -R o-w /opt/hostedtoolcache/Ruby/3.3.7/x64/lib/ruby/gems/3.3.0/gems

      - name: Configure Bundler to Use a Secure Local Path
        run: bundle config set --local path 'vendor/bundle'

      - name: Preconfigure Nokogiri and Other Gems
        run: bundle config set force_ruby_platform true

      - name: Install Dependencies
        run: bundle install --jobs 4 --retry 3

      - name: Ensure All Pending Changes Are Committed
        run: |
          git add .
          git commit -m "Commit pending changes before releasing gem" || echo "No changes to commit"

      - name: Push Committed Changes
        run: |
          git push origin main || (echo "Push failed; retrying with rebase..." && git pull origin main --rebase && git push origin main)

      - name: Double-check for Clean Working Directory
        run: |
          if [[ $(git status --porcelain) ]]; then
            echo "Error: Uncommitted changes detected!" && exit 1
          else
            echo "Working directory is clean. Proceeding with gem release."
          fi

      - name: Release the Gem
        uses: rubygems/release-gem@v1
        with:
          await-release: true
        env:
          RUBYGEMS_API_KEY: ${{ secrets.RUBYGEMS_API_KEY }}
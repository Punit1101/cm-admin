name: Bump Gem

on:
  workflow_dispatch:
    inputs:
      bump_type:
        type: choice
        description: "Bump Type ( Choosing None will bump build number and keep the same version )"
        default: "patch"
        options:
          - patch
          - minor
          - major

permissions:
  contents: write  # Ensures we can push changes

jobs:
  build:
    name: Build gem
    runs-on: ubuntu-latest

    permissions:
      id-token: write  # Mandatory for trusted publishing
      contents: write  # Required for pushing release tag

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set Git Config
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          git config --global user.email "${GITHUB_ACTOR_ID}+${GITHUB_ACTOR}@users.noreply.github.com"
          git config --global user.name "$(gh api /users/${GITHUB_ACTOR} | jq .name -r)"
          git config -l

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: false  # Avoid caching issues
          ruby-version: "3.3"  # Explicit version for better compatibility

      - name: Install the gem-release
        run: gem install gem-release

      - name: Bump the gem
        run: gem bump --version ${{ github.event.inputs.bump_type }} -p

      - name: Remove lock on bundle
        run: bundle config set frozen false

      - name: Clear Bundler cache
        run: rm -rf vendor/bundle .bundle Gemfile.lock  # Ensure a clean install

      - name: Set Bundler Path
        run: bundle config set --local path 'vendor/bundle'

      - name: Fix Permissions
        run: sudo chmod -R o-w /opt/hostedtoolcache/Ruby/3.3.7/x64/lib/ruby/gems/3.3.0/gems

      - name: Bundle Install
        run: bundle install --jobs 4 --retry 3

      - name: Commit Changes Before Pull
        run: |
          git add Gemfile.lock
          git commit -m "Update Gemfile.lock after bundle install" || echo "No changes to commit"

      - name: Git Pull latest changes
        run: |
          git pull --rebase || (echo "Skipping rebase due to local changes"; git pull --no-rebase)

      - name: Check if changes exist before pushing
        run: |
          if ! git diff --quiet; then
            git push origin ${{ github.ref_name }}
          else
            echo "No changes to push."
          fi

  release:
    name: Release gem
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write  # Mandatory for trusted publishing
      contents: write  # Required for `rake release`

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Git Pull
        run: git pull

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.3"
          bundler-cache: false

      - name: Remove lock on bundle
        run: bundle config set frozen false

      - uses: rubygems/release-gem@v1
        with:
          await-release: false
